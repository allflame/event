services:
  logger.event:
    synthetic: true
    tags:
      - {name: 'logger', channel: 'event'}
  event.handler.factory:
    class: Vainyl\Event\Factory\ContainerHandlerFactory
    arguments: ['@app.di']
  event.handler.storage:
    class: Vainyl\Event\Storage\EventHandlerStorage
    arguments: ['@map.prototype', '@map.prototype', '@priority.queue.prototype','@event.handler.factory']
  event.dispatcher:
    class: Vainyl\Event\EventDispatcher
    arguments: ['@event.handler.storage']
  event.config:
    class: Vainyl\Event\Config\EventConfig
    factory: ['@event.config.factory', createConfig]
    arguments: ['@app.environment']
  event.config.factory:
    class: Vainyl\Event\Config\EventConfigFactory
    arguments: ['@map.prototype', '@extension.storage']
  event.dispatcher.collection:
    class: Vainyl\Event\Operation\CollectionEventDispatcher
    arguments: ['@queue.prototype', '@event.dispatcher']
  collection.factory.sequence.event:
    decorates: collection.factory.sequence
    decoration_priority: 500
    class: Vainyl\Event\Operation\Decorator\EventCollectionFactoryDecorator
    arguments: ['@collection.factory.sequence.event.inner', '@event.dispatcher.collection']
  collection.factory.set.event:
    decorates: collection.factory.set
    decoration_priority: 500
    class: Vainyl\Event\Operation\Decorator\EventCollectionFactoryDecorator
    arguments: ['@collection.factory.set.event.inner', '@event.dispatcher.collection']